{"ast":null,"code":"var _jsxFileName = \"/home/alvaro/Documentos/Proyectos/TMDB/src/commons/Movie.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport tmdbGet from \"../utils/tmdbClient\";\nimport styles from \"./Movie.module.css\";\nimport Spinner from \"./Spinner\";\nimport imgPlaceholder from \"../utils/imgPlaceholder.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movie = () => {\n  _s();\n\n  const {\n    mId\n  } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [movie, setMovie] = useState(null);\n  useEffect(() => {\n    tmdbGet(\"/movie/\" + mId).then(movie => {\n      setLoading(false);\n      setMovie(movie);\n    });\n    /* usamos la funcion tmdb en utils que ejecuta el axios a la api */\n  }, [mId]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!movie) {\n    return null;\n  }\n\n  const imageUrl = movie.poster_path ? \"https://image.tmdb.org/t/p/w500\" + movie.poster_path : imgPlaceholder;\n  /* tratar de refactorizar */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.detailsMovie,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: `${styles.col} ${styles.movieImg}`,\n      src: imageUrl,\n      alt: movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.col} ${styles.movieDetails}`,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Title: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), movie.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Premiere: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), movie.release_date.split(\"-\").reverse().join(\"-\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Genres: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), movie.genres.map(genre => genre.name).join(\", \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Description: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), movie.overview]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Vote average: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), movie.vote_average]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Movie, \"ZMKHnd1nb08jafp7Y7Cio2QAuL4=\", false, function () {\n  return [useParams];\n});\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["React","useEffect","useState","useParams","tmdbGet","styles","Spinner","imgPlaceholder","Movie","mId","loading","setLoading","movie","setMovie","then","imageUrl","poster_path","detailsMovie","col","movieImg","title","movieDetails","release_date","split","reverse","join","genres","map","genre","name","overview","vote_average"],"sources":["/home/alvaro/Documentos/Proyectos/TMDB/src/commons/Movie.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport tmdbGet from \"../utils/tmdbClient\";\nimport styles from \"./Movie.module.css\";\nimport Spinner from \"./Spinner\";\nimport imgPlaceholder from \"../utils/imgPlaceholder.jpg\";\n\nconst Movie = () => {\n  const { mId } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    tmdbGet(\"/movie/\" + mId).then((movie) => {\n      setLoading(false);\n      setMovie(movie);\n    }); /* usamos la funcion tmdb en utils que ejecuta el axios a la api */\n  }, [mId]);\n\n  if (loading) {\n    return <Spinner />;\n  }\n\n  if (!movie) {\n    return null;\n  }\n  const imageUrl = movie.poster_path\n    ? \"https://image.tmdb.org/t/p/w500\" + movie.poster_path\n    : imgPlaceholder; /* tratar de refactorizar */\n\n  return (\n    <div className={styles.detailsMovie}>\n      <img\n        className={`${styles.col} ${styles.movieImg}`}\n        src={imageUrl}\n        alt={movie.title}\n      />\n      <div className={`${styles.col} ${styles.movieDetails}`}>\n        <p>\n          <strong>Title: </strong>\n          {movie.title}\n        </p>\n        <p>\n          <strong>Premiere: </strong>\n          {movie.release_date.split(\"-\").reverse().join(\"-\")}\n        </p>\n        <p>\n          <strong>Genres: </strong>\n          {movie.genres.map((genre) => genre.name).join(\", \")}\n        </p>\n        <p>\n          <strong>Description: </strong>\n          {movie.overview}\n        </p>\n        <p>\n          <strong>Vote average: </strong>\n          {movie.vote_average}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Movie;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAClB,MAAM;IAAEC;EAAF,IAAUN,SAAS,EAAzB;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC;EAEAD,SAAS,CAAC,MAAM;IACdG,OAAO,CAAC,YAAYK,GAAb,CAAP,CAAyBK,IAAzB,CAA+BF,KAAD,IAAW;MACvCD,UAAU,CAAC,KAAD,CAAV;MACAE,QAAQ,CAACD,KAAD,CAAR;IACD,CAHD;IAGI;EACL,CALQ,EAKN,CAACH,GAAD,CALM,CAAT;;EAOA,IAAIC,OAAJ,EAAa;IACX,oBAAO,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,IAAI,CAACE,KAAL,EAAY;IACV,OAAO,IAAP;EACD;;EACD,MAAMG,QAAQ,GAAGH,KAAK,CAACI,WAAN,GACb,oCAAoCJ,KAAK,CAACI,WAD7B,GAEbT,cAFJ;EAEoB;;EAEpB,oBACE;IAAK,SAAS,EAAEF,MAAM,CAACY,YAAvB;IAAA,wBACE;MACE,SAAS,EAAG,GAAEZ,MAAM,CAACa,GAAI,IAAGb,MAAM,CAACc,QAAS,EAD9C;MAEE,GAAG,EAAEJ,QAFP;MAGE,GAAG,EAAEH,KAAK,CAACQ;IAHb;MAAA;MAAA;MAAA;IAAA,QADF,eAME;MAAK,SAAS,EAAG,GAAEf,MAAM,CAACa,GAAI,IAAGb,MAAM,CAACgB,YAAa,EAArD;MAAA,wBACE;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,EAEGT,KAAK,CAACQ,KAFT;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAKE;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,EAEGR,KAAK,CAACU,YAAN,CAAmBC,KAAnB,CAAyB,GAAzB,EAA8BC,OAA9B,GAAwCC,IAAxC,CAA6C,GAA7C,CAFH;MAAA;QAAA;QAAA;QAAA;MAAA,QALF,eASE;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,EAEGb,KAAK,CAACc,MAAN,CAAaC,GAAb,CAAkBC,KAAD,IAAWA,KAAK,CAACC,IAAlC,EAAwCJ,IAAxC,CAA6C,IAA7C,CAFH;MAAA;QAAA;QAAA;QAAA;MAAA,QATF,eAaE;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,EAEGb,KAAK,CAACkB,QAFT;MAAA;QAAA;QAAA;QAAA;MAAA,QAbF,eAiBE;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,EAEGlB,KAAK,CAACmB,YAFT;MAAA;QAAA;QAAA;QAAA;MAAA,QAjBF;IAAA;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA+BD,CAtDD;;GAAMvB,K;UACYL,S;;;KADZK,K;AAwDN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}